To be added to each file. i did not want to upload file to GitHub just in case 

MB :)_____________________________________________________________________________________
Package.DB

//find products that has the findMe string
        public static List<Product> SearchProducts(string findMe, bool showAll)
        {

            List<Product> listOfProducts = new List<Product>();

            //create connection
            SqlConnection connection = TravelExpertsDB.GetConnection();

            //create sql command
            string selectStatement = "SELECT * FROM Products " +
                "WHERE prodname like '%" + findMe.Trim() + "%'";

            //search for something
            if (findMe.Trim().Length != 0)
            {
                string msg = "";
                if (Validator.inputIsInteger(findMe, out msg))
                {
                    selectStatement += " OR ProductId ='" + findMe + "'";
                }
            }
            SqlCommand selectCommand = new SqlCommand(selectStatement, connection);

            //open connection
            try
            {
                connection.Open();
            }
            catch (Exception ex)
            {
                throw ex;
            }

            //create reader
            try
            {
                SqlDataReader reader = selectCommand.ExecuteReader();
                while (reader.Read())
                {
                    //create a package
                    Product newProduct = new Product();
                    //add package details
                    newProduct.prodID = (int)reader["ProductId"];
                    newProduct.prodName = reader["prodName"].ToString();
                    //add book to list
                    listOfProducts.Add(newProduct);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            //close connection
            try
            {
                connection.Close();
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return listOfProducts;
        }


John :)_____________________________________________________________________________________

Product.DB

/////Performs search on main page////
        public static List<Product> SearchProducts(string charactersToSearch)
        {

            List<Product> productList = new List<Product>();

            //create connection
            SqlConnection connection = TravelExpertsDB.GetConnection();

            //create sql command
            string selectStatement = "SELECT * FROM Products " +
                "WHERE ProductId like '%" + charactersToSearch.Trim() + "%' OR " +
                "ProdName like '%" + charactersToSearch.Trim() + "%'";

            //search for something
            if (charactersToSearch.Trim().Length != 0)
            {
                string msg = "";
                if (Validator.inputIsInteger(charactersToSearch, out msg))
                {
                    selectStatement += " OR ProductId ='" + charactersToSearch + "'";
                }
            }

            SqlCommand selectCommand = new SqlCommand(selectStatement, connection);

            //open connection
            try
            {
                connection.Open();
            }
            catch (Exception ex)
            {
                throw ex;
            }

            try
            {
                SqlDataReader reader = selectCommand.ExecuteReader();
                while (reader.Read())
                {
                    Product newProduct = new Product();//create a Product
                    newProduct.prodID = Convert.ToInt32(reader["ProductId"]);//add package details
                    newProduct.prodName = reader["ProdName"].ToString();

                    productList.Add(newProduct);//add Product to list
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                connection.Close();
            }

            return productList;
        }

John :)_____________________________________________________________________________________

Supplier.DB

 /////Performs search on main page////
        public static List<Supplier> SearchSuppliers(string charactersToSearch)
        {

            List<Supplier> supplierList = new List<Supplier>();

            //create connection
            SqlConnection connection = TravelExpertsDB.GetConnection();

            //create sql command
            string selectStatement = "SELECT * FROM Suppliers " +
                "WHERE SupplierId like '%" + charactersToSearch.Trim() + "%' OR " +
                "SupName like '%" + charactersToSearch.Trim() + "%'";

            //search for something
            if (charactersToSearch.Trim().Length != 0)
            {
                string msg = "";
                if (Validator.inputIsInteger(charactersToSearch, out msg))
                {
                    selectStatement += " OR SupplierId ='" + charactersToSearch + "'";
                }
            }

            SqlCommand selectCommand = new SqlCommand(selectStatement, connection);

            //open connection
            try
            {
                connection.Open();
            }
            catch (Exception ex)
            {
                throw ex;
            }

            try
            {
                SqlDataReader reader = selectCommand.ExecuteReader();
                while (reader.Read())
                {
                    Supplier newSupplier = new Supplier();//create a Supplier
                    newSupplier.SupplierId = Convert.ToInt32(reader["SupplierId"]);//add Supplier details
                    newSupplier.SupName = reader["SupName"].ToString();

                    supplierList.Add(newSupplier);//add Supplier to list
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                connection.Close();
            }

            return supplierList;
        }
